# C++ References
Till now, we have read that C++ supports two types of variables:

An ordinary variable is a variable that contains the value of some type. 
For example, we create a variable of type int, which means that the variable 
can hold the value of type integer.
A pointer is a variable that stores the address of another variable. It can be 
dereferenced to retrieve the value to which this pointer points to.
There is another variable that C++ supports, i.e., references. It is a variable 
that behaves as an alias for another variable.
How to create a reference?
Reference can be created by simply using an ampersand (&) operator. When we create 
a variable, then it occupies some memory location. We can create a reference 
of the variable; therefore, we can access the original variable by using either 
name of the variable or reference. For example,

int a=10;  
Now, we create the reference variable of the above variable.

int &ref=a;  
The above statement means that 'ref' is a reference variable of 'a', i.e.,
 we can use the 'ref' variable in place of 'a' variable.

# C++ provides two types of references:
References to non-const values
References as aliases
AD
References to non-const values

It can be declared by using & operator with the reference type variable.

******************************************************************************************

#include <iostream>  
using namespace std;  
int main()  
{  
int a=10;  
int &value=a;  
std::cout << value << std::endl;  
return 0;  
} 







*****************************************************************************************




Output

 10 
References as aliases

References as aliases is another name of the variable which is being referenced.

For example,

int a=10;   // 'a' is a variable.  
int &b=a; // 'b' reference to a.  
int &c=a; // 'c' reference to a.  